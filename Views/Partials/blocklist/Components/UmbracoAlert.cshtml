@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockListItem>;
@using Components.Svedea.UmbracoBlocks
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using System.Text.Json

@{
    var content = (ContentModels.UmbracoAlert)Model.Content;

    var umbracoAlertModel = new UmbracoAlertModel
        {
            Title = content.Title,
            Date = content.Date
        };
}

@(await Html.RenderComponentAsync<UmbracoAlertBlock>(RenderMode.ServerPrerendered, new { Model = umbracoAlertModel }))

@*
All types of parameters are supported, except:
- Generic parameters.
- Non-serializable parameters.
- Inheritance in collection parameters.
- Parameters whose type is defined outside of the Blazor WebAssembly app or within a lazily-loaded assembly.
- For receiving a RenderFragment delegate for child content (for example, param-ChildContent="..."). For this scenario, we recommend creating a Razor component (.razor) that references the component you want to render with the child content you want to pass and then invoke the Razor component from the page or view with the Component Tag Helper.
(https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/built-in/component-tag-helper?view=aspnetcore-6.0)
*@