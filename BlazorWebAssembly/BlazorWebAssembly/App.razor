@*@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader AssemblyLoader*@
<Router AppAssembly="@typeof(App).Assembly">
@*<Router AppAssembly="@typeof(App).Assembly"
        AdditionalAssemblies="@lazyLoadedAssemblies"
        OnNavigateAsync="@OnNavigateAsync">*@
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>


@code {
    //private List<Assembly> lazyLoadedAssemblies = new();

    //private async Task OnNavigateAsync(NavigationContext args)
    //{
    //    try
    //    {

    //        var assemblies = await AssemblyLoader.LoadAssembliesAsync(
    //            new[] { "Components.Svedea.dll", "Newtonsoft.Json.dll" });
    //        lazyLoadedAssemblies.AddRange(assemblies);

    //    }
    //    catch (Exception ex)
    //    {

    //    }
    //}

}